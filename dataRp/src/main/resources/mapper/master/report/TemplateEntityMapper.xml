<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.h3c.bigdata.zhgx.function.report.dao.TemplateEntityMapper">
  <resultMap id="BaseResultMap" type="com.h3c.bigdata.zhgx.function.report.entity.TemplateEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="tag" jdbcType="VARCHAR" property="tag" />
    <result column="template_source_name" jdbcType="VARCHAR" property="templateSourceName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, number, name, description,template_source_name
  </sql>
  <select id="selectByExample" parameterType="com.h3c.bigdata.zhgx.function.report.entity.TemplateEntityExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from template
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from template
    where id = #{id,jdbcType=INTEGER}
  </select>
    <!--根据数据库表名查询模板信息-->
    <select id="selectByNumber"  parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from template
        where number = #{number}
    </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from template
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.h3c.bigdata.zhgx.function.report.entity.TemplateEntityExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from template
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <delete id="deleteTemplateById">
    delete from  template WHERE id =#{id}
  </delete>
  <insert id="insertSelective" parameterType="com.h3c.bigdata.zhgx.function.report.entity.TemplateEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into template
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="number != null">
        number,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <insert id="mvInsert">
    insert into report.${tempalteName} (${item}) select ${item} from falsework.${tempalteName}
  </insert>
  <select id="countByExample" parameterType="com.h3c.bigdata.zhgx.function.report.entity.TemplateEntityExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from template
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update template
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update template
    set id = #{record.id,jdbcType=INTEGER},
      number = #{record.number,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.h3c.bigdata.zhgx.function.report.entity.TemplateEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update template
    <set>
      <if test="number != null">
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.h3c.bigdata.zhgx.function.report.entity.TemplateEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update template
    set number = #{number,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectAllByKeyword" resultType="com.h3c.bigdata.zhgx.function.report.model.TemplateModel">
    select
    DISTINCT e.id,
    e.number,
    e.name,
    e.description,
    e.tag,
    d.department_name departmentName,
    e.update_user updateUser,
    e.update_time updateTime,
    s.source_name_cn templateSourceName,
    s.source_name_en templateSourceNameEn,
    d.id departmentId,
    e.is_used
    from template e
    LEFT JOIN  sys_temp_dpt t ON e.id=t.template_id
    LEFT JOIN template_source s ON e.template_source_name = s.source_name_en
    LEFT JOIN auth_department_info d ON t.department_id = d.id
    <where>
    <if test="name != null and name != ''">
      e.name like CONCAT('%',#{name},'%')
    </if>
    <if test="list != null ">
    AND t.department_id IN
    <foreach collection="list" open="(" close=")" separator="," item="item">
      #{item}
    </foreach>
    </if>
    </where>
    group by e.id order by e.update_time desc
  </select>
  
  <resultMap type="com.h3c.bigdata.zhgx.function.report.model.TemplateAddBean" id="TemplateAddBean">
    <id column="id" jdbcType="INTEGER" property="id" />
  	<result column="number" property="templateNum" jdbcType="VARCHAR"/>
  	<result column="name" property="templateName" jdbcType="VARCHAR"/>
  	<result column="description" property="description" jdbcType="VARCHAR"/>
    <result column="tag" property="tempTag" jdbcType="VARCHAR"/>
    <result column="fill_in_period" property="fillInPeriod" jdbcType="VARCHAR"/>
    <result column="template_source_name" property="templateSourceName" jdbcType="VARCHAR"/>
    <result column="template_source_name_en" property="templateSourceNameEn" jdbcType="VARCHAR"/>
    <result column="is_completed" property="isCompleted" jdbcType="INTEGER"/>
  	<collection column="{id=id}" property="itemBeans" ofType="com.h3c.bigdata.zhgx.function.report.model.TemplateItemBean"
  	javaType="ArrayList" select="queryTemplateItemBeanByNumber"/>
  </resultMap>
  <select id="queryTemplateItemBeanByNumber" resultType="com.h3c.bigdata.zhgx.function.report.model.TemplateItemBean">
  	select item itemName,name itemDesc,type,is_null isNull,
  	       enums,is_union_only isUnionOnly,is_search isSearch,is_sort isSort
  	from table_description where template_id=#{id}
  </select>
  <select id="queryTempByNumber" resultMap="TemplateAddBean">
  		select t.id,t.number,t.name,t.description,t.tag,t.fill_in_period,
  		      ts.source_name_cn template_source_name,
  		      t.template_source_name  template_source_name_en,ra.is_completed
  		from template t,template_source ts ,template_complate_rate ra
  		where t.number=#{tempNumber} and t.template_source_name = #{templateSourceName} and t.id = ra.template_id
  	    and t.template_source_name = ts.source_name_en
  </select>
  
  <update id="updateTempByTempNu">
  	update template
  	<set>
  		<if test="templateName !=null and templateName!=''">
  			name=#{templateName},
  		</if>
  		<if test="description != null and description!=''">
  			description=#{description},
  		</if>
      <if test="isUsed != null and isUsed!=''">
        is_used =#{isUsed},
      </if>
            tag=#{tempTag},update_user=#{updateUser},update_time=#{updateTime},fill_in_period=#{fillInPeriod}
  	</set>
  	<where>
  		id=#{id}
  	</where>
  </update>
  <update id="updateTempCommentByNu">
  	alter table ${templateSourceName}.${templateNum} comment #{templateName}
  </update>
  <!--更新模板是否使用的状态-->
  <update id="updateTempById">
    update template set  is_used =#{isUsed}
    where id=#{templateId}
  </update>


  <select id="getTemplateList" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    distinct
    e.id,e.number,e.name
    from template e,sys_temp_dpt t
    LEFT JOIN sys_department d ON t.department_id = d.id
    where
    e.id=t.template_id and d.department_code like CONCAT(#{departmentCode},'%')
    <if test="name != null and name != ''">
      AND e.name like CONCAT('%',#{name},'%')
    </if>
    <if test="null != list and list.size > 0">
      <foreach collection ="list" item="item" open="and " separator=" or ">
        FIND_IN_SET(#{item},e.tag)
      </foreach>
    </if>
  </select>

  <!--根据模板名/表名和具体值查询该字段下是否已存在该值-->
  <select id="getTemOrTabNameItem" resultType="java.lang.String">
    select id from template
    <where>
      <if test="temOrTabName =='number'.toString() and temOrTabName !=null and temOrTabName!=''">
        AND FIND_IN_SET(#{item},number)
      </if>
      <if test="temOrTabName =='name'.toString() and temOrTabName !=null and temOrTabName!=''">
        AND FIND_IN_SET(#{item},name)
      </if>
    </where>
  </select>

  <!--获取所有的模板信息列表-->
  <select id="getAllTemplates" resultMap="BaseResultMap">
     select  <include refid="Base_Column_List" />
     from  template
  </select>


  <!--获取所有包含整数、小数字段的模板信息列表-->
  <select id="getAllNumcriTemplates" resultMap="BaseResultMap">
    select   t.id , t.number, t.name, t.description,t.template_source_name
   from template t , table_description des WHERE
    t.id = des.template_id and ( des.type=1 or des.type =2)
    GROUP BY t.id
  </select>

    <select id="annexWordList"  parameterType="java.lang.String" resultType="java.util.Map">
        SELECT t.template_source_name, d.item, t.number FROM template as t, table_description as d
        WHERE t.id=d.template_id and t.name=#{tempalteName} and d.type=6
    </select>
    <select id="getYfTempalteWords" resultType="java.util.Map">
      select id,number,name from falsework.template as f
    </select>
    <select id="getYfTempalteDes" resultType="java.util.Map">
      select id,number,item,name,type,is_null,enums,is_union_only,is_search
      from falsework.table_description
    </select>
  <select id="getItermwords" resultType="java.lang.String">
        select item from report_data.table_description where template_id = #{templateId}
  </select>
  <select id="selectTemplateList" resultType="java.lang.String">
    select number from falsework.template GROUP BY number
  </select>
  <update id="updateCollectCount">
    update report_data.template_collect set number_sum=(SELECT count(1) from falsework.${tempalteName}) where template_collect.number=#{tempalteName}
  </update>

</mapper>